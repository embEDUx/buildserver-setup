FROM {{ stage3_image }}
MAINTAINER Stefan Junker <code@stefanjunker.de>

{% if target_arch is defined and arch != target_arch %}
ADD files/qemu/{{ arch }}_qemu-{{ target_arch_short }} /usr/bin/qemu-{{ target_arch_short }}
ENV QEMU_CPU {{ arch_qemu_cpu_map[target_arch] }}
{% endif %}

RUN echo "en_US.UTF-8 UTF-8" >> /etc/locale.gen && locale-gen
RUN mkdir /usr/portage; \
	  emerge-webrsync {% if stage3_date is defined %}--revert={{ stage3_date }}{% endif %} || \
    emerge-webrsync

ADD files/make.conf.appendix /tmp/
RUN cat /tmp/make.conf.appendix >> /etc/portage/make.conf

COPY files/portage/bashrc /etc/portage/bashrc

RUN emerge flaggie layman

RUN \
  {% set kernel_version=ansible_kernel.split('.')[0]+"."+ansible_kernel.split('.')[1] %}
  {% set package="=sys-kernel/gentoo-sources-"+kernel_version+"*" %}
  {% set flags="+use::experimental +kw::~"+arch %}
  flaggie {{ package }} {{ flags }}  && \
  emerge --autounmask-write=y {{ package }}; \
  etc-update --automode -5 && \
  emerge -u {{ package }} && \
  rm -Rf /usr/portage/distfiles/*
  
ADD files/kernel.config /usr/src/linux/.config

COPY files/portage/patches/dev-lang/go /etc/portage/patches/dev-lang/go/

RUN \
  {% set package="app-emulation/docker" %}
  {% set flags="+kw::~"+arch %}
  flaggie {{ package }} {{ flags }}  && \
  emerge --autounmask-write=y {{ package }}; \
  etc-update --automode -5 && \
  emerge -u {{ package }} && \
  rm -Rf /usr/portage/distfiles/*

COPY files/ca-certificates /usr/local/share/ca-certificates/
RUN \
    chmod 644 /usr/local/share/ca-certificates/*.crt && \
    update-ca-certificates

CMD /bin/bash
